//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at http://docs.kentico.com.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine.Types.DancingGoatMvc;
using CMS.DocumentEngine;
using CMS.Ecommerce;

[assembly: RegisterDocumentType(Laptop.CLASS_NAME, typeof(Laptop))]

namespace CMS.DocumentEngine.Types.DancingGoatMvc
{
	/// <summary>
	/// Represents a content item of type Laptop.
	/// </summary>
	public partial class Laptop : SKUTreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "DancingGoatMvc.Laptop";


		/// <summary>
		/// The instance of the class that provides extended API for working with Laptop fields.
		/// </summary>
		private readonly LaptopFields mFields;


		/// <summary>
		/// The instance of the class that provides extended API for working with SKU fields.
		/// </summary>
		private readonly ProductFields mProduct;

		#endregion


		#region "Properties"

		/// <summary>
		/// CoffeeID.
		/// </summary>
		[DatabaseIDField]
		public int LaptopID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("LaptopID"), 0);
			}
			set
			{
				SetValue("LaptopID", value);
			}
		}


		/// <summary>
		/// Brand.
		/// </summary>
		[DatabaseField]
		public string Brand
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Brand"), @"");
			}
			set
			{
				SetValue("Brand", value);
			}
		}


		/// <summary>
		/// RAM.
		/// </summary>
		[DatabaseField]
		public string RAM
		{
			get
			{
				return ValidationHelper.GetString(GetValue("RAM"), @"USA");
			}
			set
			{
				SetValue("RAM", value);
			}
		}


		/// <summary>
		/// O S.
		/// </summary>
		[DatabaseField]
		public string OperatingSystem
		{
			get
			{
				return ValidationHelper.GetString(GetValue("OperatingSystem"), @"");
			}
			set
			{
				SetValue("OperatingSystem", value);
			}
		}


		/// <summary>
		/// Bettery.
		/// </summary>
		[DatabaseField]
		public string Bettery
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Bettery"), @"");
			}
			set
			{
				SetValue("Bettery", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with Laptop fields.
		/// </summary>
		[RegisterProperty]
		public LaptopFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with SKU fields.
		/// </summary>
        [RegisterProperty]
		public ProductFields Product
		{
			get
			{
				return mProduct;
			}
		}


		/// <summary>
		/// Provides extended API for working with Laptop fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class LaptopFields : AbstractHierarchicalObject<LaptopFields>
		{
			/// <summary>
			/// The content item of type Laptop that is a target of the extended API.
			/// </summary>
			private readonly Laptop mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="LaptopFields" /> class with the specified content item of type Laptop.
			/// </summary>
			/// <param name="instance">The content item of type Laptop that is a target of the extended API.</param>
			public LaptopFields(Laptop instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// CoffeeID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.LaptopID;
				}
				set
				{
					mInstance.LaptopID = value;
				}
			}


			/// <summary>
			/// Brand.
			/// </summary>
			public string Brand
			{
				get
				{
					return mInstance.Brand;
				}
				set
				{
					mInstance.Brand = value;
				}
			}


			/// <summary>
			/// RAM.
			/// </summary>
			public string RAM
			{
				get
				{
					return mInstance.RAM;
				}
				set
				{
					mInstance.RAM = value;
				}
			}


			/// <summary>
			/// O S.
			/// </summary>
			public string OperatingSystem
			{
				get
				{
					return mInstance.OperatingSystem;
				}
				set
				{
					mInstance.OperatingSystem = value;
				}
			}


			/// <summary>
			/// Bettery.
			/// </summary>
			public string Bettery
			{
				get
				{
					return mInstance.Bettery;
				}
				set
				{
					mInstance.Bettery = value;
				}
			}
		}


		/// <summary>
		/// Provides extended API for working with SKU fields.
		/// </summary>
        [RegisterAllProperties]
		public class ProductFields : AbstractHierarchicalObject<ProductFields>
		{
		    /// <summary>
			/// The content item of type <see cref="Laptop" /> that is a target of the extended API.
			/// </summary>
			private readonly Laptop mInstance;


			/// <summary>
			/// The <see cref="PublicStatusInfo" /> object related to product based on value of <see cref="SKUInfo.SKUPublicStatusID" /> column. 
			/// </summary>
			private PublicStatusInfo mPublicStatus = null;


			/// <summary>
			/// The <see cref="ManufacturerInfo" /> object related to product based on value of <see cref="SKUInfo.SKUManufacturerID" /> column. 
			/// </summary>
			private ManufacturerInfo mManufacturer = null;


			/// <summary>
			/// The <see cref="DepartmentInfo" /> object related to product based on value of <see cref="SKUInfo.SKUDepartmentID" /> column. 
			/// </summary>
			private DepartmentInfo mDepartment = null;


			/// <summary>
			/// The <see cref="SupplierInfo" /> object related to product based on value of <see cref="SKUInfo.SKUSupplierID" /> column. 
			/// </summary>
			private SupplierInfo mSupplier = null;


			/// <summary>
			/// The <see cref="TaxClassInfo" /> object related to product based on value of <see cref="SKUInfo.SKUTaxClassID" /> column. 
			/// </summary>
			private TaxClassInfo mTaxClass = null;


			/// <summary>
			/// The <see cref="BrandInfo" /> object related to product based on value of <see cref="SKUInfo.SKUBrandID" /> column. 
			/// </summary>
			private BrandInfo mBrand = null;


			/// <summary>
			/// The <see cref="CollectionInfo" /> object related to product based on value of <see cref="SKUInfo.SKUCollectionID" /> column. 
			/// </summary>
			private CollectionInfo mCollection = null;


			/// <summary>
			/// The shortcut to <see cref="SKUInfo" /> object which is a target of this extended API.
			/// </summary>
			private SKUInfo SKU
			{
				get 
				{
					return mInstance.SKU;
				}
			}

						
			/// <summary>
			/// Initializes a new instance of the <see cref="ProductFields" /> class with SKU related fields of type <see cref="Laptop" /> .
			/// </summary>
			/// <param name="instance">The content item of type Laptop that is a target of the extended API.</param>
			public ProductFields(Laptop instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// SKUID.
			/// </summary>
			public int ID
			{
				get
				{
					return (SKU != null) ? SKU.SKUID : 0;
				}
				set
				{
					if (SKU != null)
					{
						SKU.SKUID = value;
					}
				}
			}


			/// <summary>
			/// Allows you to specify the product identifier. You can use this number or string, for example, in your accounting records.
			/// </summary>
			public string SKUNumber
			{
				get
				{
					return (SKU != null) ? SKU.SKUNumber : @"";
				}
				set
				{
					if (SKU != null)
					{
						SKU.SKUNumber = value;
					}
				}
			}


			/// <summary>
			/// Package weight.
			/// </summary>
			public double Weight
			{
				get
				{
					return (SKU != null) ? SKU.SKUWeight : 0;
				}
				set
				{
					if (SKU != null)
					{
						SKU.SKUWeight = value;
					}
				}
			}


			/// <summary>
			/// Package height.
			/// </summary>
			public double Height
			{
				get
				{
					return (SKU != null) ? SKU.SKUHeight : 0;
				}
				set
				{
					if (SKU != null)
					{
						SKU.SKUHeight = value;
					}
				}
			}


			/// <summary>
			/// Package width.
			/// </summary>
			public double Width
			{
				get
				{
					return (SKU != null) ? SKU.SKUWidth : 0;
				}
				set
				{
					if (SKU != null)
					{
						SKU.SKUWidth = value;
					}
				}
			}


			/// <summary>
			/// Package depth.
			/// </summary>
			public double Depth
			{
				get
				{
					return (SKU != null) ? SKU.SKUDepth : 0;
				}
				set
				{
					if (SKU != null)
					{
						SKU.SKUDepth = value;
					}
				}
			}


			/// <summary>
			/// Gets <see cref="PublicStatusInfo" /> object based on value of <see cref="SKUInfo.SKUPublicStatusID" /> column. 
			/// </summary>
			public PublicStatusInfo PublicStatus
			{	
				get
				{
					if (SKU == null)
					{
						return null;
					}

					var id = SKU.SKUPublicStatusID;

				    if ((mPublicStatus == null) && (id > 0))
				    {
                        mPublicStatus = PublicStatusInfoProvider.GetPublicStatusInfo(id);
				    }

				    return mPublicStatus;
				}
			}


			/// <summary>
			/// Gets <see cref="ManufacturerInfo" /> object based on value of <see cref="SKUInfo.SKUManufacturerID" /> column. 
			/// </summary>
			public ManufacturerInfo Manufacturer
			{	
				get
				{
					if (SKU == null)
					{
						return null;
					}

					var id = SKU.SKUManufacturerID;

				    if ((mManufacturer == null) && (id > 0))
				    {
                        mManufacturer = ManufacturerInfoProvider.GetManufacturerInfo(id);
				    }

				    return mManufacturer;
				}
			}


			/// <summary>
			/// Gets <see cref="DepartmentInfo" /> object based on value of <see cref="SKUInfo.SKUDepartmentID" /> column. 
			/// </summary>
			public DepartmentInfo Department
			{	
				get
				{
					if (SKU == null)
					{
						return null;
					}

				    var id = SKU.SKUDepartmentID;

				    if ((mDepartment == null) && (id > 0))
				    {
				        mDepartment = DepartmentInfoProvider.GetDepartmentInfo(id);
                    }

					return mDepartment;
				}
			}


			/// <summary>
			/// Gets <see cref="SupplierInfo" /> object based on value of <see cref="SKUInfo.SKUSupplierID" /> column. 
			/// </summary>
			public SupplierInfo Supplier
			{	
				get
				{
					if (SKU == null)
					{
						return null;
					}

					var id = SKU.SKUSupplierID;

				    if ((mSupplier == null) && (id > 0))
				    {
                        mSupplier = SupplierInfoProvider.GetSupplierInfo(id);
                    }

				    return mSupplier;
				}
			}


			/// <summary>
			/// Gets <see cref="TaxClassInfo" /> object based on value of <see cref="SKUInfo.SKUTaxClassID" /> column. 
			/// </summary>
			public TaxClassInfo TaxClass
			{	
				get
				{
					if (SKU == null)
					{
						return null;
					}

					var id = SKU.SKUTaxClassID;

				    if ((mTaxClass == null) && (id > 0))
				    {
						mTaxClass = TaxClassInfoProvider.GetTaxClassInfo(id);
				    }
				    
				    return mTaxClass;
				}
			}


			/// <summary>
			/// Gets <see cref="BrandInfo" /> object based on value of <see cref="SKUInfo.SKUBrandID" /> column. 
			/// </summary>
			public BrandInfo Brand
			{	
				get
				{
					if (SKU == null)
					{
						return null;
					}

					var id = SKU.SKUBrandID;

					if ((mBrand == null) && (id > 0))
					{
						mBrand = BrandInfoProvider.GetBrandInfo(id);
					}

					return mBrand;
				}
			}


			/// <summary>
			/// Gets <see cref="CollectionInfo" /> object based on value of <see cref="SKUInfo.SKUCollectionID" /> column. 
			/// </summary>
			public CollectionInfo Collection
			{	
				get
				{
					if (SKU == null)
					{
						return null;
					}

					var id = SKU.SKUCollectionID;

					if ((mCollection == null) && (id > 0))
					{
						mCollection = CollectionInfoProvider.GetCollectionInfo(id);
					}

					return mCollection;
				}
			}


			/// <summary>
			/// Localized name of product.
			/// </summary>
			public string Name
			{
				get
				{
					return mInstance.DocumentSKUName;
				}
				set
				{
					mInstance.DocumentSKUName = value;
				}
			}


			/// <summary>
			/// Localized description of product.
			/// </summary>
			public string Description
			{
				get
				{
					return mInstance.DocumentSKUDescription;
				}
				set
				{
					mInstance.DocumentSKUDescription = value;
				}
			}


			/// <summary>
			/// Localized short description of product.
			/// </summary>
			public string ShortDescription
			{
				get
				{
					return mInstance.DocumentSKUShortDescription;
				}
				set
				{
					mInstance.DocumentSKUShortDescription = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="Laptop" /> class.
		/// </summary>
		public Laptop() : base(CLASS_NAME)
		{
			mFields = new LaptopFields(this);
			mProduct = new ProductFields(this);
		}

		#endregion
	}
}